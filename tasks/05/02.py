# https://inf-ege.sdamgia.ru/problem?id=47002
def f(n):
    b = bin(n)[2:]
    k1, k0 = 0, 0
    pos = 1
    for smb in b:
        if pos%2==0:
            if smb=='1':
                k1 += 1
        else:
            if smb=='0':
                k0 += 1
        pos += 1
    return abs(k1-k0)


n = 2
while True:
    if f(n) == 4:
        print(n)
        break
    n += 1
'''
Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
1. Строится двоичная запись числа N.
2. Вычисляется количество единиц, стоящих на чётных местах в двоичной записи числа N без ведущих нулей, и количество нулей, стоящих на нечётных местах. Места отсчитываются слева направо (от старших разрядов к младшим, начиная с единицы).
3. Результатом работы алгоритма становится модуль разности полученных двух чисел.
Пример. Дано число N = 39. Алгоритм работает следующим образом:
1. Строится двоичная запись: 3910 = 1001112.
2. Выделяем единицы на чётных и нули на нечётных местах: 100111. На чётных местах стоят две единицы, на нечётных — один ноль.
3. Модуль разности равен 1.
Результат работы алгоритма R = 1.
При каком наименьшем N в результате работы алгоритма получится R = 4?
'''